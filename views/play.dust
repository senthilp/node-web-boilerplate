<!doctype html>
<html>
<head>
	<title>playground</title>
	<style>
		body {
    		padding: 20px;
		}
		.clr {
			display: block;
			clear: both;
		}
		.clr:after {
			display: block;
			visibility: hidden;
			clear: both;
			overflow: hidden;
			height: 0;
			content: "\0020";
		}
		.slider-container {
			margin: 20px auto 100px;
			width: 500px;			
		}		

		.imglistwrap {
			visibility: hidden;
			overflow: hidden;
			width: 100%;
			background-color: #333;
			padding: 4px 5px 0 5px;
			margin-bottom: 10px;
		}
		.imglistwrap .imgwrap {
			position: relative;
			display: inline-block;
			height: 70px;
			width: 75px;
		}
		.imglistwrap .imglist {
			width: 1575px;
			position: relative;
		}

		.imglistwrap .imglist img {
			max-height: 70px;
			margin-right: 5px;
		}
		.imglistwrap .imglist img.is-selected {
			border: 4px solid red;
		}
		.sliderwrap {
			padding-bottom: 40px;
		}
		/* slider root element */
		.smartslider {
		    background-color: #ccc;		    
		    position: relative;		    
		    width: 100%;
		    float: left;
		    clear: right;
		    margin-top: 10px;
		}
		.smartslider-progress, .smartslider-marker {
			background-color: #888;			
			position: absolute;
			width: 0;
		}		
		.smartslider, .smartslider-progress {
			border-radius:5px;
			height: 8px;
		}
		.smartslider-marker {
			width: auto;
		}
		/* drag handle */
		.smartslider a {
		    background-color: #fff;
		    height: 16px;
		    width: 16px;
		    top: -7px;
		    position: absolute;
		    display: block;
		    margin-top: 1px;
		    border: 2px solid #888;
		    cursor: pointer;
		    border-radius: 50%;		    
		}	
	</style>
</head>
<body>
	<div class="slider-container clr">
		<div class="imglistwrap">
			<div class="imglist">
				<img src="http://thumbs3.ebaystatic.com/d/l225/m/mdVQcNjaahBOQA1jQ4zUm_g.jpg" class="is-selected"/>
				<img src="http://thumbs1.ebaystatic.com/d/l225/m/m1HKzhMK2WSWKOfuey2IPvg.jpg" />
				<img src="http://thumbs1.ebaystatic.com/d/l225/m/mrO_w-5NzvEUnBzATCyfsOA.jpg" />
				<img src="http://thumbs2.ebaystatic.com/d/l225/m/mIrX42PHTn_wuBgZ9ijuG6g.jpg" />				
				<img src="http://thumbs1.ebaystatic.com/d/l225/m/m1HKzhMK2WSWKOfuey2IPvg.jpg" />
				<img src="http://thumbs4.ebaystatic.com/d/l225/m/mhfWMzs5X95bU03ZXIH_cLA.jpg" />
				<img src="http://thumbs2.ebaystatic.com/d/l225/m/mF_Ek0xj0mpFIYayMTnSh9A.jpg" />
				<img src="http://thumbs4.ebaystatic.com/d/l225/m/mEnN9cQzbzugdyB57P4u9OQ.jpg" />				
				<img src="http://thumbs2.ebaystatic.com/d/l225/m/mtGXNEOd352Rp8sAClALv6A.jpg" />
				<img src="http://thumbs1.ebaystatic.com/d/l225/m/m_J79jR8MnCSRtTYakZYvAw.jpg" />
				<img src="http://thumbs4.ebaystatic.com/d/l225/m/mgqaK0e0EDBpk_6VT2Tlnzw.jpg" />
				<img src="http://thumbs4.ebaystatic.com/d/l225/m/m09BrwHuJZDhHUS1d12vwsw.jpg" />
				<img src="http://thumbs4.ebaystatic.com/d/l225/m/m1HKzhMK2WSWKOfuey2IPvg.jpg" />
				<img src="http://thumbs1.ebaystatic.com/d/l225/m/mIrX42PHTn_wuBgZ9ijuG6g.jpg" />
				<img src="http://thumbs2.ebaystatic.com/d/l225/m/m1HKzhMK2WSWKOfuey2IPvg.jpg" />
				<img src="http://thumbs3.ebaystatic.com/d/l225/m/my1nxL0KR23m_Nxo44K65Dw.jpg" />
				<img src="http://thumbs4.ebaystatic.com/d/l225/m/m4rC5aZeR-y_I6yKw5AaN0w.jpg" />
				<img src="http://thumbs3.ebaystatic.com/d/l225/m/m1HKzhMK2WSWKOfuey2IPvg.jpg" />
				<img src="http://thumbs4.ebaystatic.com/d/l225/m/mDp4a92Zj1HA8K0HVHL9KmA.jpg" />
				<img src="http://thumbs2.ebaystatic.com/d/l225/m/mnUeBLxfCI1l-9Xbs2fFRXA.jpg" />
			</div>
		</div>
		<div class="sliderwrap">
			<div class="smartslider" data-min="0" data-max="19" data-value="0" data-step="0" data-init="true">
				<div class="smartslider-progress" data-value="10"></div>
				<div class="smartslider-marker" data-value="16"></div>
				<a href="#"></a>
			</div>
		</div>
	</div>
	<br/>
	<div id="react"></div>
	<script src="http://code.jquery.com/jquery-1.11.1.js"></script>
	<script src="/js/rangeslider/jquery.smartslider.js"></script>
	<script src="/js/rangeslider/smartslider.js"></script>
	<script src="/js/react/react.js"></script>
	<script src="/js/react/react-with-addons.js"></script>
	<script src="/js/react/JSXTransformer.js"></script>

	<script>
	</script>
	<script>
		/* global React */
		var ProductCategoryRow = React.createClass({displayName: 'ProductCategoryRow',
		    render: function() {
		        return (React.DOM.tr(null, React.DOM.th( {colSpan:"2"}, this.props.category)));
		    }
		});

		var ProductRow = React.createClass({displayName: 'ProductRow',
		    render: function() {
		        var name = this.props.product.stocked ?
		            this.props.product.name :
		            React.DOM.span( {style:{color: 'red'}},
		                this.props.product.name
		            );
		        return (
		            React.DOM.tr(null,
		                React.DOM.td(null, name),
		                React.DOM.td(null, this.props.product.price)
		            )
		        );
		    }
		});

		var ProductTable = React.createClass({displayName: 'ProductTable',
		    render: function() {
		        console.log(this.props);
		        var rows = [];
		        var lastCategory = null;
		        this.props.products.forEach(function(product) {
		            if (product.name.indexOf(this.props.filterText) === -1 || (!product.stocked && this.props.inStockOnly)) {
		                return;
		            }
		            if (product.category !== lastCategory) {
		                rows.push(ProductCategoryRow( {category:product.category, key:product.category} ));
		            }
		            rows.push(ProductRow( {product:product, key:product.name} ));
		            lastCategory = product.category;
		        }.bind(this));
		        return (
		            React.DOM.table(null,
		                React.DOM.thead(null,
		                    React.DOM.tr(null,
		                        React.DOM.th(null, "Name"),
		                        React.DOM.th(null, "Price")
		                    )
		                ),
		                React.DOM.tbody(null, rows)
		            )
		        );
		    }
		});

		var SearchBar = React.createClass({displayName: 'SearchBar',
		    handleChange: function() {
		        this.props.onUserInput(
		            this.refs.filterTextInput.getDOMNode().value,
		            this.refs.inStockOnlyInput.getDOMNode().checked
		        );
		    },
		    render: function() {
		        return (
		            React.DOM.form( {onSubmit:this.handleSubmit},
		                React.DOM.input(
		                    {type:"text",
		                    placeholder:"Search...",
		                    value:this.props.filterText,
		                    ref:"filterTextInput",
		                    onChange:this.handleChange}
		                ),
		                React.DOM.p(null,
		                    React.DOM.input(
		                        {type:"checkbox",
		                        value:this.props.inStockOnly,
		                        ref:"inStockOnlyInput",
		                        onChange:this.handleChange}
		                    ),
		                    "Only show products in stock"
		                )
		            )
		        );
		    }
		});

		var FilterableProductTable = React.createClass({displayName: 'FilterableProductTable',
		    getInitialState: function() {
		        return {
		            filterText: '',
		            inStockOnly: false
		        };
		    },
		    
		    handleUserInput: function(filterText, inStockOnly) {
		        this.setState({
		            filterText: filterText,
		            inStockOnly: inStockOnly
		        });
		    },
		    
		    render: function() {
		        return (
		            React.DOM.div(null,
		                SearchBar(
		                    {filterText:this.state.filterText,
		                    inStockOnly:this.state.inStockOnly,
		                    onUserInput:this.handleUserInput}
		                ),
		                ProductTable(
		                    {products:this.props.products,
		                    filterText:this.state.filterText,
		                    inStockOnly:this.state.inStockOnly}
		                )
		            )
		        );
		    }
		});


		var PRODUCTS = [
			{category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},
			{category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},
			{category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},
			{category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},
			{category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},
			{category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}
		];
		 
		React.renderComponent(FilterableProductTable( {products:PRODUCTS} ), document.getElementById('react'));
	</script>
</body>
</html>